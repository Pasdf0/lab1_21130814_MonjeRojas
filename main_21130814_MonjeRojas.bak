#lang Racket

(require "option_21130814_MonjeRojas.rkt")
(require "flow_21130814_MonjeRojas.rkt")
(require "chatbot_21130814_MonjeRojas.rkt")
(require "system_21130814_MonjeRojas.rkt")
(require "user_21130814_MonjeRojas.rkt")
(require "chathistory_21130814_MonjeRojas.rkt")
(provide (all-defined-out))

;(define epi? (lambda (n) (or (exact-positive-integer? n) (= n 0))))
;Se redefine la funci√≥n para verificar ids en caso de requerir cambios

;(define list-dup? (lambda (lista)
;        (not (false? (check-duplicates lista)))))


(define (myRandom Xn)
        (modulo (+ (* 1103515245 Xn) 12345) 2147483648)
)

;--------------------System talk rec

(define msg-in-fw-rec (lambda (fw msg)
        (define msg-fw-aux (lambda (list-op msg)
                (if (null? list-op)
                    #f
                    (if (msg-in-op? (car list-op) msg)
                        (car list-op)
                        (msg-fw-aux (cdr list-op) msg)))))
        (msg-fw-aux (Sel-fw-op fw) msg)))

(define msg-in-sys-rec (lambda (sys msg)
        (msg-in-fw-rec (get-current-fw sys) msg)))

(define sys-update-rec (lambda (sys msg)
        (sys-update-usr (sys-update-cb-fwid (sys-update-cbcode sys
        (Sel-op-cbcodelink (msg-in-sys-rec sys msg))) (Sel-op-fwcodelink (msg-in-sys-rec sys msg))) msg)))


(define system-talk-rec (lambda (sys msg)
        (if (and (system? sys)(string? msg)(not (equal? (Sel-sys-usr sys) NoUser)))
            (if (msg-in-sys? sys msg)
                (sys-update-rec sys msg)
                (sys-update-usr sys msg))
            InvalidSystem)))

;--------------------System talk norec

(define msg-in-fw-norec (lambda (fw msg)
        (findf (lambda (arg) (msg-in-op? arg msg)) (Sel-fw-op fw))))

(define msg-in-sys-norec (lambda (sys msg)
        (msg-in-fw-norec (get-current-fw sys) msg)))

(define sys-update-norec (lambda (sys msg)
        (sys-update-usr (sys-update-cb-fwid (sys-update-cbcode sys
        (Sel-op-cbcodelink (msg-in-sys-rec sys msg))) (Sel-op-fwcodelink (msg-in-sys-norec sys msg))) msg)))

(define system-talk-norec (lambda (sys msg)
        (if (and (system? sys)(string? msg)(not (equal? (Sel-sys-usr sys) NoUser)))
            (if (msg-in-sys? sys msg)
                (sys-update-norec sys msg)
                (sys-update-usr sys msg))
            InvalidSystem)))

;--------------------System synthesis
(define str-append-cola (lambda (lista)
        (map (lambda (arg) (string-append arg "\n")) lista)))

(define format-sys (lambda (usr)
        (define format-aux (lambda (chathis)
                (string-append (Sel-usr-name usr) ": " (car chathis) "\n"
                (cadr chathis) ": " (caddr chathis) "\n"
                (apply string-append (str-append-cola (cdddr chathis))) "\n\n")))
        (apply string-append (map format-aux (Sel-usr-his usr)))))

(define system-synthesis (lambda (sys usr-name)
        (if (and (system? sys)(string? usr-name))
            (if (usr-is-in (user usr-name) (Sel-sys-list-usr sys))
                (format-sys (if (equal? (Sel-usr-name (Sel-sys-usr sys)) usr-name)
                                (Sel-sys-usr sys)
                                (find-usr (user usr-name) (Sel-sys-list-usr sys))))
                InvalidUser)
            InvalidUser)))

;--------------------System simulate

;(define system-simulate (lambda (sys maxInter seed)
        
